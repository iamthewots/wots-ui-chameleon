@use "../settings/variables";
@use "sass:color";
@use "sass:meta";
@use "sass:string";

@function get-color-luminance($color) {
    $channel-red: color.red($color) * 0.299;
    $channel-green: color.green($color) * 0.587;
    $channel-blue: color.blue($color) * 0.114;

    @return $channel-red + $channel-green + $channel-blue;
}

@function is-color-dark($color) {
    $luminance: get-color-luminance($color);

    @if ($luminance > 130) {
        @return false;
    }
    @return true;
}

@function is-shade-in-color-name($color-name) {
    @if (string.index($color-name, primary)) {
        @return true;
    } @else if (string.index($color-name, secondary)) {
        @return true;
    } @else if (string.index($color-name, tertiary)) {
        @return true;
    }
    @return false;
}

@function get-border($color: null) {
    $border-color: var(--clr-border);
    @if (meta.type-of($color) == color) {
        $border-color: $color;
    } @else if (meta.type-of($color) == string) {
        $border-color: var(--clr-#{$color}-primary-darker);
    }

    @return var(--border-width);
}

@function get-box-shadow($color: null) {
    $shadow-primary: var(--clr-shadow-primary);
    $shadow-secondary: var(--clr-shadow-secondary);
    @if (meta.type-of($color) == color) {
        $shadow-primary: color.change(
            $color,
            $alpha: variables.$def-shadow-primary-alpha
        );
        $shadow-secondary: color.change(
            $color,
            $alpha: variables.$def-shadow-secondary-alpha
        );
    }
    @if (meta.type-of($color) == string) {
        $shadow-primary: var(--clr-#{$color}-shadow-primary);
        $shadow-secondary: var(--clr-#{$color}-shadow-secondary);
    }

    @return $shadow-primary variables.$def-shadow-primary-settings,
        $shadow-secondary variables.$def-shadow-secondary-settings;
}

@function get-linear-gradient($color: null, $direction: to top) {
    $gradient-step-1: var(--clr-primary);
    $gradient-step-2: var(--clr-secondary);
    $gradient-step-3: var(--clr-tertiary);
    @if (meta.type-of($color) == color) {
        $gradient-step-1: color.scale(
            $color,
            $lightness: variables.$def-shade-delta * -1
        );
        $gradient-step-2: $color;
        $gradient-step-3: color.scale(
            $color,
            $lightness: variables.$def-shade-delta
        );
    }
    @if (meta.type-of($color) == string) {
        $color-shade: #{$color}-primary;
        @if (is-shade-in-color-name($color)) {
            $color-shade: $color;
        }
        $gradient-step-1: var(--clr-#{$color-shade}-darker);
        $gradient-step-2: var(--clr-#{$color-shade});
        $gradient-step-3: var(--clr-#{$color-shade}-lighter);
    }

    @return linear-gradient(
        #{$direction},
        #{$gradient-step-1},
        #{$gradient-step-2},
        #{$gradient-step-3}
    );
}
