@use "./variables";
@use "sass:map";

$animations-map: ();

// draw
@each $direction in left, right, up, down {
    $transform-axis: X;
    $distance: -100%;
    @if ($direction == up or $direction == down) {
        $transform-axis: Y;
    }
    @if ($direction == left or $direction == up) {
        $value: 100%;
    }
    $keyframe-name: draw-#{$direction};
    @keyframes #{$keyframe-name} {
        from {
            transform: translate#{$transform-axis }(#{$distance});
        }
        to {
            transform: translate#{$transform-axis }(0);
        }
    }

    // ani-draw
    $animations-map: map.set(
        $animations-map,
        $keyframe-name,
        (
            keyframes: $keyframe-name,
            timing-function: ease-out,
        )
    );
}

// fade
@keyframes fade {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

// ani-fade
$animations-map: map.set(
    $animations-map,
    fade,
    (
        keyframes: fade,
        timing-function: ease-out,
    )
);
// ani-blink
$animations-map: map.set(
    $animations-map,
    blink,
    (
        keyframes: fade,
        iteration-count: infinite,
        timing-function: steps(2, jump-none),

    )
);

// slide
@each $direction in left, right, up, down {
    @each $size in variables.$sizes {
        $distance: var(--distance-#{$size});
        @if ($direction == right or $direction == down) {
            $value: calc(var(--distance-#{$size}) * -1);
        }
        $transform-axis: X;
        @if ($direction == up or $direction == down) {
            $transform-axis: Y;
        }
        $keyframe-name: slide-#{$direction}-#{$size};
        @keyframes #{$keyframe-name} {
            from {
                transform: translate#{$transform-axis }($distance);
            }
            to {
                transform: translate#{$transform-axis }(0);
            }
        }

        // ani-slide
        $animations-map: map.set(
            $animations-map,
            $keyframe-name,
            (
                keyframes: $keyframe-name,
                timing-function: ease-out,
            )
        );
    }
}

// zoom in
@each $size in variables.$sizes {
    $zoom-value: calc(100% - var(--distance-#{$size}));
    $keyframe-name: zoom-in-#{$size};
    @keyframes #{$keyframe-name} {
        from {
            transform: scale(#{$zoom-value});
        }
        to {
            transform: scale(1);
        }
    }

    // ani-zoom-in
    $animations-map: map.set(
        $animations-map,
        $keyframe-name,
        (
            keyframes: $keyframe-name,
            timing-function: ease-out,
        )
    );
}

// zoom out
@each $size in variables.$sizes {
    $zoom-value: calc(100% + var(--distance-#{$size}));
    $keyframe-name: zoom-out-#{$size};
    @keyframes #{$keyframe-name} {
        from {
            transform: scale(#{$zoom-value});
        }
        to {
            transform: scale(1);
        }
    }

    // ani-zoom-out
    $animations-map: map.set(
        $animations-map,
        $keyframe-name,
        (
            keyframes: $keyframe-name,
            timing-function: ease-out,
        )
    );
}