@use "./defaults";
@use "sass:map";

$animations: ();

// draw
@each $direction in left, right, up, down {
    $axis: X;
    $distance: -100%;
    @if ($direction == up or $direction == down) {
        $axis: Y;
    }
    @if ($direction == left or $direction == up) {
        $distance: 100%;
    }

    $keyframes-id: draw-#{$direction};

    @keyframes #{$keyframes-id} {
        from {
            transform: translate#{$axis }(#{$distance});
        }
        to {
            transform: translate#{$axis }(0);
        }
    }

    $animations: map.set(
        $animations,
        $keyframes-id,
        (
            keyframes: $keyframes-id,
            timing-function: ease-out,
        )
    );
}

// fade
@keyframes fade {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

$animations: map.set(
    $animations,
    fade,
    (
        keyframes: fade,
        timing-function: ease-out,
    )
);
$animations: map.set(
    $animations,
    blink,
    (
        keyframes: fade,
        iteration-count: infinite,
        timing-function: steps(2, jump-none),
    )
);

// slide
@each $direction in left, right, up, down {
    @each $size in defaults.$SIZES {
        $axis: X;
        $distance: var(--distance-#{$size});
        @if ($direction == up or $direction == down) {
            $axis: Y;
        }
        @if ($direction == right or $direction == down) {
            $distance: calc(#{$distance} * -1);
        }

        $keyframes-id: slide-#{$direction}-#{$size};
        @keyframes #{$keyframes-id} {
            from {
                transform: translate#{$axis }(#{$distance});
            }
            to {
                transform: translate#{$axis }(0);
            }
        }

        $animations: map.set(
            $animations,
            $keyframes-id,
            (
                keyframes: $keyframes-id,
                timing-function: ease-out,
            )
        );
    }
}

// zoom-in
@each $size in defaults.$SIZES {
    $zoom: calc(100% - var(--distance-#{$size}));

    $keyframes-id: zoom-in-#{$size};
    @keyframes #{$keyframes-id} {
        from {
            transform: scale(#{$zoom});
        }
        to {
            transform: scale(1);
        }
    }

    $animations: map.set(
        $animations,
        $keyframes-id,
        (
            keyframes: $keyframes-id,
            timing-function: ease-out,
        )
    );
}

// zoom-out
@each $size in defaults.$SIZES {
    $zoom: calc(100% + var(--distance-#{$size}));

    $keyframes-id: zoom-out-#{$size};
    @keyframes #{$keyframes-id} {
        from {
            transform: scale(#{$zoom});
        }
        to {
            transform: scale(1);
        }
    }

    $animations: map.set(
        $animations,
        $keyframes-id,
        (
            keyframes: $keyframes-id,
            timing-function: ease-out,
        )
    );
}